/*
 * File: app/view/RuleGidPanel.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ClothoExtXml.view.RuleGidPanel', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.ruleGridPanel',

    id: 'ruleGridPanel',
    maxWidth: 250,
    minWidth: 250,
    padding: 2,
    width: 250,
    title: 'Lista Regole ',
    enableColumnHide: false,
    enableColumnMove: false,
    enableColumnResize: false,
    store: 'Rules',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                id: 'ruleGridView',
                itemId: 'ruleGridView'
            },
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 154,
                    dataIndex: 'regexp',
                    text: 'Regola'
                },
                {
                    xtype: 'numbercolumn',
                    dataIndex: 'id',
                    text: 'Id'
                }
            ],
            listeners: {
                select: {
                    fn: me.onRuleGridPanelSelect,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onRuleGridPanelSelect: function(selModel, record, index, options) {
        Ext.getCmp('ruleData').update(record.getData());
    }

});