/*
 * File: app/controller/GlobalVariables.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ClothoExtXml.controller.GlobalVariables', {
    extend: 'Ext.Base',

    singleton: true,

    addCurrentRecord: function() {
        this.currentRecord=Ext.create(this.currentModel);
        this.currentStore.insert(0,this.currentRecord);
        if (!this.currentContainer.isVisible())
        this.currentContainer.setVisible(true);
        this.currentForm.getForm().loadRecord(this.currentRecord);
        this.currentStatus='Add';
        console.log(this.currentStatus);

    },

    deleteFromStore: function() {
        if(this.currentStatus=='Add')
        this.currentStore.remove(this.currentRecord);
    },

    formExit: function() {
        this.currentContainer.hide();
        if(this.currentStatus=='Add'){
            this.deleteFromStore();
        }
    },

    formSave: function(failureFunc,successFunc) {
        this.currentForm.getForm().updateRecord();
        this.currentStore.sync({
            success:successFunc,
        failure:failureFunc}
        );
    },

    removeCurrentRecord: function(successFunc, failureFunc) {
        this.currentStore.remove(this.currentRecord)
        this.currentStore.sync({
            success:successFunc,
            failure:failureFunc
        });
    },

    getCurrentContainer: function() {
        return this.currentContainer
    },

    getCurrentForm: function() {
        return this.currentForm
    },

    getCurrentGrid: function() {
        return this.currentGrid
    },

    getCurrentModel: function() {
        return this.currentModel
    },

    getCurrentRecord: function() {
        return this.currentRecord
    },

    getCurrentStatus: function() {
        return this.currentStatus
    },

    getCurrentStore: function() {
        return this.currentStore;
    },

    setCurrentContainer: function(container) {
        this.currentContainer=container
    },

    setCurrentForm: function(form) {
        this.currentForm=form;
    },

    setCurrentGrid: function(grid) {
        this.currentGrid=grid
    },

    setCurrentModel: function(model) {
        this.currentModel=model;
    },

    setCurrentRecord: function(record) {
        this.currentRecord=record
    },

    setCurrentStatus: function(status) {
        this.currentStatus=status
    },

    setCurrentStore: function(store) {
        this.currentStore=store;
    },

    hideCurrentContainer: function() {
        if(this.currentContainer){
            if(this.currentContainer.isVisible())
            this.currentContainer.setVisible(false);
        }
    }

});